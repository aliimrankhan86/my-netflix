{"ast":null,"code":"import _classCallCheck from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aliimrankhan1/Desktop/my-netflix/src/Search.js\";\nimport React from \"react\";\nimport SingleMovie from \"./SingleMovie\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(name) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n\n    _this.changeHandler = function (e) {\n      _this.setState({\n        value: e.target.value\n      }); // function firing onChange event and setting the value in state\n\n    };\n\n    _this.name = \"Ali & Jay\";\n    console.log('Parent name value is ', _this.name);\n    _this.state = {\n      movies: require('./moviedata.json'),\n      value: ' ' //  setting intial values to state\n\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.movies.filter(function (i) {\n        return _this2.state.value === \" \" || i.Title.includes(_this2.state.value);\n      }).map(function (item) {\n        return React.createElement(\"div\", {\n          className: \"movie\",\n          key: item.imdbID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.Poster,\n          alt: item.Title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, item.Title));\n      }); // Filtering from state data if the data value is same as initial state value then\n      // map method kicks in or if the object title value includes the value of the \n      // new set this.state.value then it will filter the array and then map kick in\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchbar\",\n        onChange: this.changeHandler.bind(this),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(SingleMovie, {\n        movie: list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };","map":{"version":3,"sources":["/Users/aliimrankhan1/Desktop/my-netflix/src/Search.js"],"names":["React","SingleMovie","Search","name","changeHandler","e","setState","value","target","console","log","state","movies","require","list","filter","i","Title","includes","map","item","imdbID","Poster","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEqBC,M;;;;;AACjB,kBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;;AADc,UAWlBC,aAXkB,GAWF,UAACC,CAAD,EAAO;AACnB,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AADN,OAAd,EADmB,CAInB;;AACH,KAhBiB;;AAEd,UAAKJ,IAAL,GAAY,WAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,MAAKP,IAA1C;AACA,UAAKQ,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEC,OAAO,CAAC,kBAAD,CADN;AAETN,MAAAA,KAAK,EAAE,GAFE,CAIb;;AAJa,KAAb;AAJc;AASjB;;;;6BAUQ;AAAA;;AACL,UAAIO,IAAI,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,MAAlB,CAAyB,UAAAC,CAAC,EAAI;AACrC,eACI,MAAI,CAACL,KAAL,CAAWJ,KAAX,KAAqB,GAArB,IAA4BS,CAAC,CAACC,KAAF,CAAQC,QAAR,CAAiB,MAAI,CAACP,KAAL,CAAWJ,KAA5B,CADhC;AAGH,OAJU,EAIRY,GAJQ,CAIJ,UAAAC,IAAI,EAAI;AACX,eACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,GAAG,EAAEA,IAAI,CAACC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE,MAAf;AAAuB,UAAA,GAAG,EAAEF,IAAI,CAACH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIG,IAAI,CAACH,KAAT,CAFJ,CADJ;AAOH,OAZU,CAAX,CADK,CAeL;AACA;AACA;;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,QAAQ,EAAE,KAAKb,aAAL,CAAmBmB,IAAnB,CAAwB,IAAxB,CAAhC;AAA+D,QAAA,IAAI,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAET,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ;AAQH;;;;EA/C+Bd,KAAK,CAACwB,S;;SAArBtB,M","sourcesContent":["import React from \"react\";\nimport SingleMovie from \"./SingleMovie\";\n\nexport default class Search extends React.Component {\n    constructor(name) {\n        super();\n        this.name = \"Ali & Jay\";\n        console.log('Parent name value is ', this.name)\n        this.state = {\n            movies: require('./moviedata.json'),\n            value: ' '\n        }\n        //  setting intial values to state\n    }\n\n    changeHandler = (e) => {\n        this.setState({\n            value: e.target.value\n        })\n        // function firing onChange event and setting the value in state\n    }\n\n\n    render() {\n        var list = this.state.movies.filter(i => {\n            return (\n                this.state.value === \" \" || i.Title.includes(this.state.value)\n            )\n        }).map(item => {\n            return (\n                <div className=\"movie\" key={item.imdbID}>\n                    <img src={item.Poster} alt={item.Title} />\n                    <p>{item.Title}</p>\n\n                </div>\n            )\n        })\n\n        // Filtering from state data if the data value is same as initial state value then\n        // map method kicks in or if the object title value includes the value of the \n        // new set this.state.value then it will filter the array and then map kick in\n\n        return (\n            <div>\n                <input id=\"searchbar\" onChange={this.changeHandler.bind(this)} type=\"text\" />\n                <div>\n                    <SingleMovie movie={list} />\n                </div>\n            </div>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}