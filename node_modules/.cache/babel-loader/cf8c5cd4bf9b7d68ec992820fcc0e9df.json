{"ast":null,"code":"import _classCallCheck from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aliimrankhan1/Desktop/my-netflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aliimrankhan1/Desktop/my-netflix/src/Search.js\";\nimport React from \"react\";\nimport Results from \"./Results\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n\n    _this.changeHandler = function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    };\n\n    _this.state = {\n      movies: [require('./moviedata.json')],\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('input value is ', this.state.value);\n      var list = this.state.value.filter(function (item) {\n        return _this2.state.value || _this2.state.movies;\n      }).map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.Title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, item.Poster);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchbar\",\n        onChange: this.changeHandler.bind(this),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };","map":{"version":3,"sources":["/Users/aliimrankhan1/Desktop/my-netflix/src/Search.js"],"names":["React","Results","Search","changeHandler","e","setState","value","target","state","movies","require","console","log","list","filter","item","map","Title","Poster","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEqBC,M;;;;;AACjB,oBAAc;AAAA;;AAAA;;AACV;;AADU,UAQdC,aARc,GAQE,UAACC,CAAD,EAAO;AACnB,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AADN,OAAd;AAGH,KAZa;;AAEV,UAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CAACC,OAAO,CAAC,kBAAD,CAAR,CADC;AAETJ,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFU;AAMb;;;;6BAUQ;AAAA;;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKJ,KAAL,CAAWF,KAA1C;AAEA,UAAIO,IAAI,GAAG,KAAKL,KAAL,CAAWF,KAAX,CAAiBQ,MAAjB,CAAwB,UAAAC,IAAI;AAAA,eAAI,MAAI,CAACP,KAAL,CAAWF,KAAX,IAAoB,MAAI,CAACE,KAAL,CAAWC,MAAnC;AAAA,OAA5B,EACNO,GADM,CACF,UAAAD,IAAI;AAAA,eAAI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBF,IAAI,CAACG,MAA5B,CAAJ;AAAA,OADF,CAAX;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,QAAQ,EAAE,KAAKf,aAAL,CAAmBgB,IAAnB,CAAwB,IAAxB,CAAhC;AAA+D,QAAA,IAAI,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;;;;EA7B+BnB,KAAK,CAACoB,S;;SAArBlB,M","sourcesContent":["import React from \"react\";\nimport Results from \"./Results\";\n\nexport default class Search extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: [require('./moviedata.json')],\n            value: ''\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({\n            value: e.target.value\n        })\n    }\n\n\n\n    render() {\n        console.log('input value is ', this.state.value);\n\n        var list = this.state.value.filter(item => this.state.value || this.state.movies)\n            .map(item => <div key={item.Title}>{item.Poster}</div>)\n\n        return (\n            <div>\n                <input id=\"searchbar\" onChange={this.changeHandler.bind(this)} type=\"text\" />\n\n            </div>\n        )\n    }\n} "]},"metadata":{},"sourceType":"module"}